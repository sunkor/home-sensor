version: "3"
services:
  sensor-listener:
    restart: always
    build:
      dockerfile: sensor-listener.dockerfile
      context: ./sensor-listener
    volumes:
      - ./sensor-listener/node_modules:/usr/src/app/node_modules
      - ./sensor-listener:/usr/src/app
    depends_on:
      - influxdb
  weather-station:
    restart: always
    build:
      dockerfile: weather-station.dockerfile
      context: ./weather-station
    volumes:
      - /usr/src/app/node_modules #bookmark volume (i.e. do NOT map to volume)
      - ./weather-station:/usr/src/app
  sensor-alerts:
    restart: always
    build:
      dockerfile: sensor-alerts.dockerfile
      context: ./sensor-alerts
    volumes:
      - /usr/src/app/node_modules #bookmark volume (i.e. do NOT map to volume)
      - ./sensor-alerts:/usr/src/app
  influxdb:
    image: influxdb
    volumes:
      - ./data/influxdb:/var/lib/influxdb
  redis:
    image: redis
    volumes:
      - ./data/redis:/var/lib/redis
  grafana:
    build:
      dockerfile: grafana.dockerfile
      context: ./grafana
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,briangann-gauge-panel
    volumes:
      - ./data/grafana:/var/lib/grafana
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - "3050:80"
      - "8090:8090"
  telegraf:
    build:
      dockerfile: health-checks.Dockerfile
      context: ./health-checks
    environment:
      - HOST_PROC=/proc
